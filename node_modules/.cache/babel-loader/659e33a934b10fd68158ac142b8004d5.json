{"ast":null,"code":"const baseUrl = 'http://localhost:3030';\nexport const login = async (email, password) => {\n  const res = await fetch(`${baseUrl}/users/login`, {\n    method: 'post',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const jsonResult = await res.json();\n\n  if (res.ok) {\n    return jsonResult;\n  }\n\n  throw jsonResult.message;\n};\nexport const register = async (email, password) => {\n  const res = await fetch(`${baseUrl}/users/register`, {\n    method: 'post',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  const jsonResult = await res.json();\n\n  if (res.ok) {\n    return jsonResult;\n  }\n\n  throw jsonResult.message;\n};\nexport const logout = async () => {};\nexport const getUser = () => {\n  return localStorage.getItem('email');\n};\nexport const isAuthenticated = () => {\n  const user = getUser();\n  return !!user;\n};","map":{"version":3,"names":["baseUrl","login","email","password","res","fetch","method","headers","body","JSON","stringify","jsonResult","json","ok","message","register","logout","getUser","localStorage","getItem","isAuthenticated","user"],"sources":["/Users/mariyannikolov/Documents/GitHub/BG-Baba/src/services/authService.js"],"sourcesContent":["const baseUrl = 'http://localhost:3030';\n\nexport const login = async (email, password) => {\n    const res = await fetch(`${baseUrl}/users/login`, {\n        method: 'post',\n        headers: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n    });\n    const jsonResult = await res.json();\n   \n    if (res.ok) {\n        return jsonResult;\n    }\n\n    throw jsonResult.message;\n};\n\nexport const register = async (email, password) => {\n    const res = await fetch(`${baseUrl}/users/register`,{\n        method: 'post',\n        headers: {\n            'content-type': 'application/json',\n        },\n        body: JSON.stringify({ email, password }),\n    });\n\n    const jsonResult = await res.json();\n   \n    if (res.ok) {\n        return jsonResult;\n    }\n\n    throw jsonResult.message;\n}\n\nexport const logout = async () => {\n    \n}\n\nexport const getUser = () => {\n    return localStorage.getItem('email');\n};\n\nexport const isAuthenticated = () => {\n    const user = getUser();\n    return !!user;\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;EAC5C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,cAAZ,EAA2B;IAC9CM,MAAM,EAAE,MADsC;IAE9CC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFqC;IAK9CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAER,KAAF;MAASC;IAAT,CAAf;EALwC,CAA3B,CAAvB;EAOA,MAAMQ,UAAU,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAzB;;EAEA,IAAIR,GAAG,CAACS,EAAR,EAAY;IACR,OAAOF,UAAP;EACH;;EAED,MAAMA,UAAU,CAACG,OAAjB;AACH,CAfM;AAiBP,OAAO,MAAMC,QAAQ,GAAG,OAAOb,KAAP,EAAcC,QAAd,KAA2B;EAC/C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,iBAAZ,EAA6B;IAChDM,MAAM,EAAE,MADwC;IAEhDC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFuC;IAKhDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAER,KAAF;MAASC;IAAT,CAAf;EAL0C,CAA7B,CAAvB;EAQA,MAAMQ,UAAU,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAzB;;EAEA,IAAIR,GAAG,CAACS,EAAR,EAAY;IACR,OAAOF,UAAP;EACH;;EAED,MAAMA,UAAU,CAACG,OAAjB;AACH,CAhBM;AAkBP,OAAO,MAAME,MAAM,GAAG,YAAY,CAEjC,CAFM;AAIP,OAAO,MAAMC,OAAO,GAAG,MAAM;EACzB,OAAOC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,eAAe,GAAG,MAAM;EACjC,MAAMC,IAAI,GAAGJ,OAAO,EAApB;EACA,OAAO,CAAC,CAACI,IAAT;AACH,CAHM"},"metadata":{},"sourceType":"module"}