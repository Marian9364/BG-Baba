{"ast":null,"code":"export const settings = {\n  host: 'http://localhost:3030'\n};\n\nasync function request(url, options) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.ok == false) {\n      const error = await response.json();\n      throw new Error(error.message);\n    }\n\n    try {\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      return response;\n    }\n  } catch (error) {\n    alert(error.message); //stop for this task\n\n    throw error;\n  }\n}\n\nfunction getOptions() {\n  let method = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'get';\n  let body = arguments.length > 1 ? arguments[1] : undefined;\n  const options = {\n    method,\n    headers: {}\n  };\n  const token = sessionStorage.getItem('authToken');\n\n  if (token != null) {\n    options.headers['X-Authorization'] = token;\n  }\n\n  if (body) {\n    options.headers['Content-Type'] = 'application/json';\n    options.body = JSON.stringify(body);\n  }\n\n  return options;\n}\n\nexport async function get(url) {\n  return await request(url, getOptions());\n}\nexport async function post(url, data) {\n  return await request(url, getOptions('post', data));\n}\nexport async function put(url, data) {\n  return await request(url, getOptions('put', data));\n}\nexport async function del(url) {\n  return await request(url, getOptions('delete'));\n}\nexport async function login(email, password) {\n  const result = await post(settings.host + '/users/login', {\n    email,\n    password\n  });\n  localStorage.setItem('email', result.email);\n  localStorage.setItem('authToken', result.accessToken);\n  localStorage.setItem('userId', result._id);\n  return result;\n}\nexport async function register(email, password) {\n  const result = await post(settings.host + '/users/register', {\n    email,\n    password\n  });\n  localStorage.setItem('email', result.email);\n  localStorage.setItem('authToken', result.accessToken);\n  localStorage.setItem('userId', result._id);\n  return result;\n}\nexport async function logout() {\n  const result = await get(settings.host + '/users/logout');\n  localStorage.removeItem('email');\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userId');\n  return result;\n}","map":{"version":3,"names":["settings","host","request","url","options","response","fetch","ok","error","json","Error","message","data","alert","getOptions","method","body","headers","token","sessionStorage","getItem","JSON","stringify","get","post","put","del","login","email","password","result","localStorage","setItem","accessToken","_id","register","logout","removeItem"],"sources":["/Users/mariyannikolov/Documents/GitHub/BG-Baba/src/fetch-api/fetch.js"],"sourcesContent":["export const settings = {\n    host: 'http://localhost:3030',\n};\n\nasync function request(url, options) {\n    try {\n        const response = await fetch(url, options);\n\n        if (response.ok == false) {\n            const error = await response.json();\n            throw new Error(error.message);\n        }\n\n        try {\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            return response;\n        }\n    } catch (error) {\n        alert(error.message); //stop for this task\n        throw error;\n    }\n}\n\nfunction getOptions(method = 'get', body) {\n    const options = {\n        method,\n        headers: {},\n    };\n\n    const token = sessionStorage.getItem('authToken');\n\n    if (token != null) {\n        options.headers['X-Authorization'] = token;\n    }\n\n    if (body) {\n        options.headers['Content-Type'] = 'application/json';\n        options.body = JSON.stringify(body);\n    }\n\n    return options;\n}\n\nexport async function get(url) {\n    return await request(url, getOptions());\n}\n\nexport async function post(url, data) {\n    return await request(url, getOptions('post', data));\n}\n\nexport async function put(url, data) {\n    return await request(url, getOptions('put', data));\n}\n\nexport async function del(url) {\n    return await request(url, getOptions('delete'));\n}\n\nexport async function login(email, password) {\n    const result = await post(settings.host + '/users/login', { email, password });\n\n    localStorage.setItem('email', result.email);\n    localStorage.setItem('authToken', result.accessToken);\n    localStorage.setItem('userId', result._id);\n\n    return result;\n}\n\nexport async function register(email, password) {\n    const result = await post(settings.host + '/users/register', { email, password });\n\n    localStorage.setItem('email', result.email);\n    localStorage.setItem('authToken', result.accessToken);\n    localStorage.setItem('userId', result._id);\n\n    return result;\n}\n\nexport async function logout() {\n    const result = await get(settings.host + '/users/logout');\n\n    localStorage.removeItem('email');\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userId');\n\n    return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}