{"ast":null,"code":"import * as request from \"./requester\";\nconst baseUrl = 'http://localhost:3030/data/comments';\nexport const create = (itemId, comment) => request.post(baseUrl, {\n  itemId,\n  text: comment\n});\nexport const remove = commentId => request.del(`${baseUrl}/${commentId}`);\nexport const getByItemId = itemId => {\n  const relations = encodeURIComponent(`user=_ownerId:users`);\n  const search = encodeURIComponent(`itemId=\"${itemId}\"`);\n  return request.get(`${baseUrl}?where=${search}&load=${relations}`);\n};","map":{"version":3,"names":["request","baseUrl","create","itemId","comment","post","text","remove","commentId","del","getByItemId","relations","encodeURIComponent","search","get"],"sources":["/Users/mariyannikolov/Documents/GitHub/BG-Baba/src/services/commentService.js"],"sourcesContent":["import * as request from \"./requester\";\n\nconst baseUrl = 'http://localhost:3030/data/comments';\n\nexport const create = (itemId, comment) =>\n    request.post(baseUrl, { itemId, text: comment });\n\nexport const remove = (commentId) => request.del(`${baseUrl}/${commentId}`);\n\n\nexport const getByItemId = (itemId) => {\n    const relations = encodeURIComponent(`user=_ownerId:users`);\n    const search = encodeURIComponent(`itemId=\"${itemId}\"`);\n\n    return request.get(`${baseUrl}?where=${search}&load=${relations}`);\n}"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB;AAEA,MAAMC,OAAO,GAAG,qCAAhB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,MAAD,EAASC,OAAT,KAClBJ,OAAO,CAACK,IAAR,CAAaJ,OAAb,EAAsB;EAAEE,MAAF;EAAUG,IAAI,EAAEF;AAAhB,CAAtB,CADG;AAGP,OAAO,MAAMG,MAAM,GAAIC,SAAD,IAAeR,OAAO,CAACS,GAAR,CAAa,GAAER,OAAQ,IAAGO,SAAU,EAApC,CAA9B;AAGP,OAAO,MAAME,WAAW,GAAIP,MAAD,IAAY;EACnC,MAAMQ,SAAS,GAAGC,kBAAkB,CAAE,qBAAF,CAApC;EACA,MAAMC,MAAM,GAAGD,kBAAkB,CAAE,WAAUT,MAAO,GAAnB,CAAjC;EAEA,OAAOH,OAAO,CAACc,GAAR,CAAa,GAAEb,OAAQ,UAASY,MAAO,SAAQF,SAAU,EAAzD,CAAP;AACH,CALM"},"metadata":{},"sourceType":"module"}